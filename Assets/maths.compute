#pragma kernel CSMain

RWTexture2D<float4> result;
int _Width;
int _Height;

float _Zoom;
float2 _Offset;
int MAX_ITERATIONS;

int Mandelbrot(float a, float b)
{
    // -> where z = 0
    double zx = 0, zy = 0;
    int iteration = 0;
    
    while (zx * zx + zy * zy < 4 && iteration < MAX_ITERATIONS)
    {
        double temp = zx * zx - zy * zy + a;
        zy = 2 * zx * zy + b;
        zx = temp;
        
        iteration++;
    }
    return iteration;
}

[numthreads(16,16,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    if (id.x >= _Width || id.y >= _Height) return;
    
    float aspect = (float) _Width / (float) _Height;
    
    float xMin = _Offset.x - 2.0 / _Zoom;
    float xMax = _Offset.x + 2.0 / _Zoom;
    float yMin = _Offset.y - 2.0f / (_Zoom * aspect);
    float yMax = _Offset.y + 2.0f / (_Zoom * aspect);
    
    double a = xMin + (xMax - xMin) * id.x / _Width;
    double b = yMin + (yMax - yMin) * id.y / _Height;
    
    int iteration = Mandelbrot(a, b);
    
    double t = (double) iteration / (double) MAX_ITERATIONS;
    result[id.xy] = (iteration == MAX_ITERATIONS) ? float4(0, 0, 0, 1.0) : float4(1, 1, 1 , 1.0);
}

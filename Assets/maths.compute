#pragma kernel CSMain

RWTexture2D<float4> result;


cbuffer MandelBrotCB
{
    int _Width;
    int _Height;
    float _Zoom;
    float2 _Offset;
    int MAX_ITERATIONS;
}

int Mandelbrot(float a, float b)
{
    // -> where z = 0
    double zx = 0, zy = 0;
    int iteration = 0;
    
    while (zx * zx + zy * zy < 4 && iteration < MAX_ITERATIONS)
    {
        double temp = zx * zx - zy * zy + a;
        zy = 2 * zx * zy + b;
        zx = temp;
        
        iteration++;
    }
    return iteration;
}


[numthreads(32, 32, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    if (id.x >= _Width || id.y >= _Height)
        return;
    
    float aspect = (float) _Width / (float) _Height;
    
    float xMin = _Offset.x - 2.0 / _Zoom;
    float xMax = _Offset.x + 2.0 / _Zoom;
    float yMin = _Offset.y - 2.0f / (_Zoom * aspect);
    float yMax = _Offset.y + 2.0f / (_Zoom * aspect);
    
    double a = xMin + (xMax - xMin) * id.x / _Width;
    double b = yMin + (yMax - yMin) * id.y / _Height;
    
    int iteration = Mandelbrot(a, b);
    float t = iteration / (float) MAX_ITERATIONS;
    t = sqrt(t);
    
    // color is from chatgpt cuz i know shit
    float3 initialColor = float3(
    0.8 + 0.2 * sin(6.2831 * (t + 0.0)),
    0.7 + 0.3 * sin(6.2831 * (t + 0.1)),
    0.6 + 0.4 * sin(6.2831 * (t + 0.2)));

    float3 deepZoomColor = float3(
    0.5 + 0.5 * sin(6.2831 * (t + 0.0)) + 0.1 * sin(12.5661 * (t + 0.2)),
    0.5 + 0.5 * sin(6.2831 * (t + 0.1)) + 0.1 * sin(18.8495 * (t + 0.3)),
    0.5 + 0.5 * sin(6.2831 * (t + 0.2)) + 0.1 * sin(25.1327 * (t + 0.4)));

    float transition = clamp(iteration / (MAX_ITERATIONS * 0.5), 0.0, 1.0);
    float3 color = lerp(initialColor, deepZoomColor, transition);
    float noise = frac(sin(iteration * 0.1 + id.x * 10.0 + id.y * 20.0) * 43758.5453);
    color = color * (1.0 + noise * 0.1); 
    color = color * pow(color, 2.0);
    result[id.xy] = float4(color, 1.0) * (iteration < MAX_ITERATIONS ? 1.0 : 0.0);
}
